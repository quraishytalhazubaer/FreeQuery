<!DOCTYPE html>
<html>
<head>
  <title>Chatbot Web Interface</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f2f2f2;
      margin: 0;
      padding: 0;
    }

    h1 {
      text-align: center;
      margin-top: 20px;
    }

    #conversation {
      background-color: #ffffff;
      padding: 20px;
      margin: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .bot-message {
      text-align: left;
      margin-bottom: 10px;
    }

    .user-message {
      text-align: right;
      margin-bottom: 10px;
    }

    .message-container {
      clear: both;
      overflow: auto;
    }

    .message {
      display: inline-block;
      padding: 10px;
      border-radius: 8px;
      background-color: #007bff;
      color: #fff;
    }

    /* Style changes for form alignment */
    form {
      display: flex;
      justify-content: center;
      align-items: center;
      height: fit-content;
      margin-top: 10px;
      margin-left: 20px;
    }

    #message {
      flex-grow: 1;
      padding: 15px;
      font-size: 25px; /* Adjust the font size as needed */
      border: 1px solid #ccc;
      border-radius: 4px;
      height: 45px; /* Adjust the height as needed */
    }

    button {
      align-items: center;
      line-height: 15px;
      padding: 32px 25px;
      margin-right: 20px;
      background-color: #007bff;
      color: #fff;
      font-size: 25px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      height: 45px; /* Match the height of the input field */
    }

    #recordButton {
      margin-left: 5px;
      margin-right: 10px;
      margin-top: 20px;
      padding: 15px 10px;
      background-color: #28a745;
      color: #fff;
      border-radius: 4px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h1>Help</h1>

  <div id="conversation">
    <p class="message">Welcome to help! Inform us any query without any hesitation.</p>
    <% for (const item of conversation) { %>
      <div class="<%= item.role === 'User' ? 'user-message' : 'bot-message' %>">
        <div class="message-container">
          <div class="message"><%= item.message %></div>
        </div>
      </div>
    <% } %>
  </div>

  <div style="text-align: center;">
    <form action="/ask" method="post">
      <button id="recordButton">
        <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-mic" viewBox="0 0 16 16">
          <path d="M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z"/>
          <path d="M10 8a2 2 0 1 1-4 0V3a2 2 0 1 1 4 0v5zM8 0a3 3 0 0 0-3 3v5a3 3 0 0 0 6 0V3a3 3 0 0 0-3-3z"/>
        </svg>
      </button>
      <input type="text" id="message" name="message" required>
      <button type="submit">Send</button>
    </form>
  </div>

  <script>
    const recordButton = document.getElementById('recordButton');
    const messageInput = document.getElementById('message');
    const conversationDiv = document.getElementById('conversation');
  
    recordButton.addEventListener('click', () => {
      const recognition = new webkitSpeechRecognition();
      recognition.lang = 'en-US';
  
      recognition.start();
  
      recognition.onresult = async function(event) {
        const audioText = event.results[0][0].transcript;
        console.log('Audio Text:', audioText);
  
        const role = 'User';
        const message = audioText;
  
        // Set the audio input as the message input value
        messageInput.value = message;
  
        // Send the audio input to the server and receive the bot's response
        const response = await fetch('/audio', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ audioText: message }),
        }).then(response => response.json());
  
        // Display the bot's response in the conversation
        const botMessageElement = createBotMessageElement(response.response);
        conversationDiv.appendChild(botMessageElement);
      };
    });
  </script>
</body>
</html>
