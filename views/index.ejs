<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot Web Interface</title>
    <link rel="stylesheet" href="/style.css">>
</head>
<body>
  <h1>Help</h1>

  <div id="conversation">
    <p class="message">Welcome to help! Inform us any query without any hesitation.</p>
    <% for (const item of conversation) { %>
      <div class="<%= item.role === 'User' ? 'user-message' : 'bot-message' %>">
        <div class="message-container">
          <div class="message"><%= item.message %></div>
        </div>
      </div>
    <% } %>
  </div>

  <div style="text-align: center;">
    <form action="/ask" method="post">
      <button id="recordButton">
        <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-mic" viewBox="0 0 16 16">
          <path d="M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z"/>
          <path d="M10 8a2 2 0 1 1-4 0V3a2 2 0 1 1 4 0v5zM8 0a3 3 0 0 0-3 3v5a3 3 0 0 0 6 0V3a3 3 0 0 0-3-3z"/>
        </svg>
      </button>
      <input type="text" id="message" name="message" required>
      <button type="submit">Send</button>
    </form>
  </div>
  <script>
    const recordButton = document.getElementById('recordButton');
    const messageInput = document.getElementById('message');
    const conversationDiv = document.getElementById('conversation');
  
    recordButton.addEventListener('click', () => {
      const recognition = new webkitSpeechRecognition();
      recognition.lang = 'en-US';
  
      recognition.start();
  
      recognition.onresult = async function(event) {
        const audioText = event.results[0][0].transcript;
        console.log('Audio Text:', audioText);
  
        const role = 'User';
        const message = audioText;
  
        // Set the audio input as the message input value
        messageInput.value = message;
  
        // Send the audio input to the server and receive the bot's response
        const response = await fetch('/audio', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ audioText: message }),
        }).then(response => response.json());
  
        // Display the bot's response in the conversation
        const botMessageElement = createBotMessageElement(response.response);
        conversationDiv.appendChild(botMessageElement);
      };
    });
  </script>
</body>
</html>
